
generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgres"
    url      = env("DATABASE_URL")
}

model Post {
    id        Int      @id @default(autoincrement())
    name      String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    createdBy   User   @relation(fields: [createdById], references: [id])
    createdById String

    @@index([name])
}

// Necessary for Next auth
model Account {
    id                       String  @id @default(cuid())
    userId                   String
    type                     String
    provider                 String
    providerAccountId        String
    refresh_token            String? // @db.Text
    access_token             String? // @db.Text
    expires_at               Int?
    token_type               String?
    scope                    String?
    id_token                 String? // @db.Text
    session_state            String?
    user                     User    @relation(fields: [userId], references: [id], onDelete: Cascade)
    refresh_token_expires_in Int?

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
    posts         Post[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

model Product {
  id          Int         @id @default(autoincrement())
  name        String
  description String
  quantity    Int
  price       Float
  sales       SaleProduct[]
}

model Customer {
  id              Int     @id @default(autoincrement())
  firstName       String
  lastName        String
  ci              String  @unique
  email           String  @unique
  phoneNumber     String
  nit             String  @unique
  birthDate       DateTime
  sales           Sale[]
}

model Sale {
  id          Int         @id @default(autoincrement())
  customerId  Int
  customer    Customer    @relation(fields: [customerId], references: [id])
  date        DateTime    @default(now())
  totalAmount Float
  products    SaleProduct[]
}

model SaleProduct {
  id          Int       @id @default(autoincrement())
  saleId      Int
  productId   Int
  quantity    Int
  salePrice   Float
  sale        Sale      @relation(fields: [saleId], references: [id])
  product     Product   @relation(fields: [productId], references: [id])
}

